<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='covid_data_5_26' inline='true' name='federated.0mkbbid1sbu1tc18mlslo1lfy3a4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_data_5_26' name='textscan.0becclj1kqxsxe1acc45j0n3ymci'>
            <connection class='textscan' directory='C:/Users/QT/Downloads/19120688_19120709_Lab01/19120688_19120709_Lab01' filename='covid_data_5_26.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0becclj1kqxsxe1acc45j0n3ymci' name='covid_data_5_26.csv' table='[covid_data_5_26#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='string' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='string' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0becclj1kqxsxe1acc45j0n3ymci' name='covid_data_5_26.csv' table='[covid_data_5_26#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='string' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='string' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[covid_data_5_26.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='string' name='[ActiveCases]' role='dimension' type='nominal' />
      <column caption='NewCases_NewRecovered_Minus' datatype='real' name='[Calculation_367324883849592833]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_REAL(&#13;&#10;&quot;&#13;&#10;import numpy as np&#13;&#10;return np.add(_arg1,_arg2).tolist()&#13;&#10;&quot;,&#13;&#10;SUM([NewCases]),&#13;&#10;SUM([Calculation_367324883851862018]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='NewRecovered_Standardized' datatype='integer' name='[Calculation_367324883851862018]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='ZN(SUM([NewRecovered]))' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='string' name='[TotalRecovered]' role='dimension' type='nominal' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_data_5_26.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_data_5_26.csv_073825EED9C64B579CF796BB9DDFB9D4]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DPRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='TotalCases' />
        <field-sort-custom-order field='NewCases' />
        <field-sort-custom-order field='TotalDeaths' />
        <field-sort-custom-order field='NewDeaths' />
        <field-sort-custom-order field='TotalRecovered' />
        <field-sort-custom-order field='NewRecovered' />
        <field-sort-custom-order field='Calculation_367324883851862018' />
        <field-sort-custom-order field='ActiveCases' />
        <field-sort-custom-order field='Serious,Critical' />
        <field-sort-custom-order field='Tot Cases/1M pop' />
        <field-sort-custom-order field='Deaths/1M pop' />
        <field-sort-custom-order field='TotalTests' />
        <field-sort-custom-order field='Tests/1M pop' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Continent' />
        <field-sort-custom-order field='1 Caseevery X ppl' />
        <field-sort-custom-order field='1 Deathevery X ppl' />
        <field-sort-custom-order field='1 Testevery X ppl' />
        <field-sort-custom-order field='New Cases/1M pop' />
        <field-sort-custom-order field='New Deaths/1M pop' />
        <field-sort-custom-order field='Active Cases/1M pop' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_data_5_26.csv' id='covid_data_5_26.csv_073825EED9C64B579CF796BB9DDFB9D4'>
            <properties context=''>
              <relation connection='textscan.0becclj1kqxsxe1acc45j0n3ymci' name='covid_data_5_26.csv' table='[covid_data_5_26#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='string' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='string' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='NewCases_NewRecovered_Bars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ so sánh số ca mắc mới và số ca hồi phục trong ngày 26/5</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data_5_26' name='federated.0mkbbid1sbu1tc18mlslo1lfy3a4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkbbid1sbu1tc18mlslo1lfy3a4'>
            <column caption='NewRecovered_Standardized' datatype='integer' name='[Calculation_367324883851862018]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='ZN(SUM([NewRecovered]))' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_367324883851862018]' derivation='User' name='[usr:Calculation_367324883851862018:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:NewCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[usr:Calculation_367324883851862018:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;DPRK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;S. Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[:Measure Names]</column>
            <column>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:NewCases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Multiple Values]</rows>
        <cols>([federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk] / [federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{D54E7345-F6E5-46CF-8991-5A39D1AA25CB}' />
    </worksheet>
    <worksheet name='TotalCases_Countries_Maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data_5_26' name='federated.0mkbbid1sbu1tc18mlslo1lfy3a4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkbbid1sbu1tc18mlslo1lfy3a4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Longitude (generated)]' field-type='quantitative' max='19937072.279124409' min='-22992176.532259516' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Latitude (generated)]' field-type='quantitative' max='11440835.082590248' min='-8964577.4169460293' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]' />
              <color column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
              <text column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]' />
              <geometry column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Latitude (generated)]</rows>
        <cols>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1F2635DC-83A3-443E-9C3B-CBB9A413D999}' />
    </worksheet>
    <worksheet name='TotalCases_Countries_Packed Bubbles'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data_5_26' name='federated.0mkbbid1sbu1tc18mlslo1lfy3a4' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkbbid1sbu1tc18mlslo1lfy3a4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
              <text column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]' />
              <text column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
              <color column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{75CEADDA-DFC8-42C7-9DE7-68FF94A2BE78}' />
    </worksheet>
    <worksheet name='TotalCases_Countries_Treemaps'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data_5_26' name='federated.0mkbbid1sbu1tc18mlslo1lfy3a4' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkbbid1sbu1tc18mlslo1lfy3a4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
              <color column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
              <text column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]' />
              <text column='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8EAA5A6E-4C6A-4610-B1B2-7D8A6B8D8488}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='TotalCases Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='TotalCases_Countries_Maps' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' param='vert' type-v2='layout-flow' w='82400' x='800' y='50000'>
                <zone h='38500' id='10' param='horz' type-v2='layout-flow' w='82400' x='800' y='50000'>
                  <zone h='38500' id='11' name='TotalCases_Countries_Treemaps' w='42000' x='800' y='50000'>
                    <layout-cache fixed-size-h='297' fixed-size-w='412' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='364' h='38500' id='12' is-fixed='true' name='TotalCases_Countries_Packed Bubbles' w='37200' x='42800' y='50000'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='TotalCases_Countries_Maps' pane-specification-id='0' param='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='TotalCases_Countries_Maps' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='TotalCases_Countries_Maps' pane-specification-id='0' param='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38500' id='11' is-fixed='true' name='TotalCases_Countries_Treemaps' w='42000' x='800' y='50000'>
                  <layout-cache fixed-size-h='297' fixed-size-w='412' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38500' id='12' is-fixed='true' name='TotalCases_Countries_Packed Bubbles' w='37200' x='42800' y='50000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D0DB4D37-E6B3-4939-9756-626B46517D61}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='TotalCases_Countries_Packed Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7EA85993-0A7F-4A16-8D59-0546FBD62B14}' />
    </window>
    <window class='worksheet' name='TotalCases_Countries_Treemaps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C197DDE8-5AD8-4FC7-94C7-405EBFE491B3}' />
    </window>
    <window class='worksheet' name='TotalCases_Countries_Maps'>
      <cards>
        <edge name='left'>
          <strip size='162'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:TotalCases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2000EF1-C3B2-4BB0-A379-3E506737F0FE}' />
    </window>
    <window class='dashboard' name='TotalCases Dashboard'>
      <viewpoints>
        <viewpoint name='TotalCases_Countries_Maps'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='TotalCases_Countries_Packed Bubbles' />
        <viewpoint name='TotalCases_Countries_Treemaps' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{961A91FD-3DE7-493A-BCDA-62EE619C88AD}' />
    </window>
    <window class='worksheet' name='NewCases_NewRecovered_Bars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[:Measure Names]</field>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[none:Country:nk]</field>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[sum:NewCases:qk]</field>
            <field>[federated.0mkbbid1sbu1tc18mlslo1lfy3a4].[usr:Calculation_367324883851862018:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5604EC1E-CB75-414A-A269-55B07F3E990F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='NewCases_NewRecovered_Bars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TotalCases Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TotalCases_Countries_Maps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TotalCases_Countries_Packed Bubbles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WYxcWZrf9zt3j33LyH3nWsWqYm3d1d01ox719IzGI0OyZMOCDViyABuG
      YRsGBAjQqwH5wXqwYQOCDViAHyw/WCMvGlij6ZmRZqa36upaSRaTW5K5Z0Zk7Pvdjx8iM8lk
      7htZNc0/UGCRmffEjYjz3fMt/+//CSml5BVe4VcUysu+gVd4hZcJ7WXfwDcdoZT0fJ+642D7
      PlKCqamkTZOopqEIgRDiZd/mKxyAVwZwStRth/vVKk8aDao9m/38yJRpMJ1M8loux0DEemUI
      X0OIVzHAyeD4Ph9vFJirVPHC8FjXqEIwm07xa2NjxA39gu/wFU6CVwZwAmx2uvzhwiIN1z3V
      9RFN44dTE0wlk69Og68JXhnAMbHWavMHTxawg+BM66hC8JtTk1zLZs7pzl7hLHiVBToGqj2b
      P1hYPPPmBwik5F8vLbPSbJ3Dnb3CWfHKAI5AEIb88dIStu+f35pS8idLy3Q979zWfIXT4ZUB
      HIGvyhU2u71zX7fteXxSKPLKA325eGUAh8ANAr7YLF3Y+nfLFbrneLK8wsnxygAOwWqrTeuA
      jI/brrJw+zalQnn3v9v71wT2QyAlD6q1M97lK5wFrwphB0BKyWKjeeDPNSuO2+oQm1XptHvg
      u/RqZZpNh9zEMFpoU6m55AYzqIrAiCdR9sl8LjaavDOYf5UWfUl4ZQCHoNjtHvgzRTOw4nF0
      0WF1rUPYrhJ4EkttsfrYx688wTfSKE4TVxjM3Ejuu07VtvHCEENVL+ptvMIheGUAByCU8kD3
      ZxvZ0VHUSAK//hmp8Vli0SiCgKRtEwzHqFYdNKUDsVEOer67QUDP918ZwEvCKwM4AJL+5jwM
      iXwOgCvf/u6uf49u/ZmbgDAMEeLgUCuQEj98lQl6WXhlAAdAAIoQBM+kKZvFFezAwJRdVpcK
      XPn2d1GcGg9v3Wfm7Zus3rnN0LVrrN26Q/bq6wwNxHjwy89QomlyKY22p6PaVSoVlzd/8CHq
      zuu8rHf5Cr+yWSApJW4QsN5p8rBW5n6txHKrTtf3kFIihCCi7X4+RNN5PLtDbWMVLZpCUyWF
      5Q0u3bjEo1/8nHbXQ/bqVFs20Xgc9AhX3nuTeDLByr0HKIrG+Fvvkx3O7HzwmqL8hXJ/pJSE
      z/z3da9z/EqeAH4Y8rhRYb5RxX+O0SmAiXiK69k8Wcui/Uy11m7WqBaKjE/PUlt5RGlzAl2R
      rC+uEktnwTDYWK1x6bUZ1h7eZ+b116gurZK/8hq9aoHWxhrNhCQ2OLkTE0R1bY+hfdMgpaTu
      OCy3mmx2O7RclyCUaIpC3DAYikaZTCZJGebXLtv1K0eG88KAXxZWKdsHZ3gAYpqOJkzulCo7
      /9apluh2XRKZJL2Oi3TbJIbG6NSqJPN52qVNIuksnWoJMxal0wlIZeLoponbaeJ4gkjUQNWN
      nY3wWi7LD6cmL/Q9XyRqts1nxQKr7RbhIVtJFYKJRJL3hoZJmeYLvMPD8StlAFJKPt1cY71z
      PCKaQLDSsLnIGPWvX55lMrl/ivTrDCklD2tVfrGxvitOOgqaovDdkTEup9Nfi9PgVyoGKPU6
      bBxz8wNIJAnj4vzzrGUxnkhc2PoXBSklt8slfr6+dqLND33386drK9ytlL8W8cGvjAFIKVlq
      1Y9NU9hG0tIuLEvzndHhi1n4grHYbPB5sXDiz3IbEviksMFq++VTwn9lDCCUkrpjn/g6IeCt
      /MC5389AVGelW+IXxQWa7snv62Wh53l8tL5+6s2/DQn8fH3tXGnmp8GvlAE8n/E5Ll7PZbma
      Ob8OrqFohHxcI5AhvcBjoVU5+qKvCe5WytjB+Wzajudxv/py3/uvjAEIIVBP6cuYmsZvTk3w
      WjZ75vsYiUX5ty/N7kp9OoHHw/ombc858/oXCS8ImK/Xz3XNR/XaqR9M54FfGQNQhSCunzz9
      ZigqEU1DUxR+MDXBr4+PnapwpQoYjpsMJXQe1Evoio6CQt6KYwc+K50ad6prBC9xMxyFim3T
      9c+3i63lujScl2f43+wKzAGQSBzfZ7FVpeZ0AUHWijIUjVHqdU601ng8ibJVtlKE4GZ+gIlE
      nJ+tr7Le7uIFh3vDiugH0klTQVGg7trUt3x+AZiqv/ME9MMQeQbvOpSS5XaNjU6DEEneSjCb
      zKIp55PJqvR2d8bJMOwHSVIilNM/S8u9HrlI5Ky3dyr8hTSAtuvyWWkFJ3zqqzY9e+dp3jtm
      4GWpGpfTuZ18tZSSxVaVJ60KlimZMSw8HyzFoul4W+tKTFUjbZmMxGK0/S6bdnvf9SVQsbuo
      QjAYjTIV729WKSVO4CMBU+2ryx0FKSXzjRJL7acNNkvtKh3f4e3c2Lnk3J9/+m8+nCM2fZnS
      kwXS2QE0TaKaFquPHjNx9QrddpdkJk6j1iGVjtFqtBFIkvkhVOXgdV8k/kIawFytsGvzb8MN
      A6KagYKgc8SHrgmFdwdH0RSFtU6djBGl6dk8aj7tABMCDB3GYhY/zEztWWO90+RJaf/N/ywC
      KcmacfKROC3X5l5tk6ZnIyXEdYOr6TwZM8LjZhkvDLmSyqMIQdtzUFCI6wZeGLDWaexZu2x3
      aHsOCcM68j6OwvN5+8FLE9z9+acMvnad8pPHPLl1i6E33kYEDoUH9/Fdm0Y9y9wf/5jZ730H
      3+kQNwWOkmY4bx647ovEXzgD6PkedffgJvZe4PHtoUke1StsdFr7OhyWqjISjxPIgEeNTTa6
      TWKagSr2dyWKvRaXUwPoz7gaoZTMN46f4ZhvVBiMxPistIobPqVhtzyHL8prXEkNsPzM071q
      d+kFfSNOGhZXknkCuX/84AQ+51FuM5/jLAk9hRmzyOVTyM4I49c7ZCanaK49IpofIRlTqdQ7
      TLx+heTAMPGERkST2FI5dN0Xib9wBuAekaKTSEIZMpvKcDmdo9htU+x0aDgOgexvppRh0rAd
      el4dQ+t/WZqiHiiFGEiJFwYstqq0PYd8JE7aiJ4ov+8EPnerhV2bfxuhlGz22qQMCyfwWe80
      dhlu07WZb5YxVR072H2yKQjixvlwbzL7cHiuvP8+AEMzkwzN9DlNoxNDOz8fz8H4pUu7rnl+
      lf3WfVH4RhqAlJKy3WWt06Du2IRSEtV1hiMJhqJxBBwYSipCsN5t0PE8dCI8qNQp93q4O5v7
      KUlOFYKEoTMSjzCdzVNxWrT2SVXGNIOVdo2VTj9FWHE6jEXTJw5na07vQH/fDnw+HJ6hYnf4
      srK25+ctz+ZqKs/DeonwmVcejCSYr1epOl28MMBSNfKRGJPxDKaqnig2GIhE0RXl2Jqox4Gh
      qOQi0aN/8YLwjTMANwi4Vdmg0N1dRu/4LqVeh/mGRlQz6Pj7tzMORRIsNXos1No4QfXQ1wqk
      pO641B2Xh9Um17JpDEMh4OkG0ITC9fQgj5qbu649TU5fV9QD3RhDUVGEODQgzkfiZM0YxV4L
      Pwyp2N099I+u71F1ejxuVHkjN8R4LLXHCLavrdh9ozEUlZwVJWtFGY8nWGjujTVOi6lkEuMM
      GaSz4htlAH4Y8lnpcCpzL/CxA5+YruM+FwgbQud2oUnxFEJXgZTMVWpEdZU3BtOkLR1L1RiN
      pojpBgNmnMYz6c2JeIZyr4d/wIZ+HgKYTeZ41Nhfhyiq6TxulFGEQBXKHkPJGFFMRUOoghkt
      y91q8dDPyZcht8obCATj8RTQP1mLvTZz1U3a3u4HyKNGhbhuMBRLsNRqHkp9Pi5UIbgxMPBS
      WaHfGAPopyBrR/L4oe/+qELlnYEh6o6NAPxQ8OPlwq4Gl9Og6wV8vl7ld2anuJxM0/FdPt5c
      wgl80kaEhG6Rj8TIGFHykRgb3eMRvlKGxXQig0TyuFHe9dQWAgq93esoQuxsQl1RGY4mCGSI
      JlTKdpfF1tF6QxL4qlogH4lhKCqLrTpfVQ4mubU9l45XIWXq1OzTKWQ/izfzeTLm2bNTZ8E3
      xgAAFpqHuyzPouHaNF0HISQDZpJ/dn/+zJt/G76U/OGTJfTLClWvQcvrP/kDL+BGZoSI1p8B
      cC2dp9TrHOsUsDSVLytr5K043xmapup0CKVEFQoPG5t7NmVCN7mSyjNXK9DzPeZqBRaaOm8P
      jLPYrB47/vDCkJV2g6wZ4W61eOR1ElBVScLQabmn/zwnE0lu5odACNwgwA1CQtnvIrM09Vi1
      j/PAN6YhpuU6/Nn6kxNdkzJMTFXlUaVHsXP++p5RTePygIVQ+htcADOJAWpOl67v9YtYCIq9
      zqEuQ0I38Hnqrg1aCWK6wXQiy1qnwYP65p5rFCG4lMgx39ytTJc1o5R7PZwwwGvX+eIXnzAw
      /Rqzl8cPfP0BKwqIE1XJM2YEx4Pl1sHiYQdhPJ5gKJpgqdFmrdWh5XoEYYiU/fdlqAq5iMV0
      KsHVXJrhWOTC3KRvjAGUeh1+UVw+0TUT8RSup/KT1fULuivIRnRmsibBM43gzyOi6hiKRtXp
      7TSQCCCqGVxO5QgIePzMRk4bFn4YYmk6mlDZ6O7dZJroF8Aaz6VadUWl7fqESOxyiYWNAl67
      S2Ntmfzrb9FeK5AeHiGXVNBGL5PQt4LvMDxRc4sqBD8Yv8STep1bpdKxGKJSguNB0w5OJDU/
      Go/y4fgw13JptHMOmL8xLpBxCj5LEEo+KRQv4G6eotrz+I3YBKoacq+2/2v1Ao/JeIbrmUGW
      2jWyRpSUaRHVDNzQ37OJ256LL0PaB2SyAGL6/pmutBGh53cIt+oJnusyfXWKP731FVnfIz95
      CbuyyL1HJV4bvgz046uTdnYFUtLxXG4M5JlNp3lcr7PYbFDp9XatpQmFjGVR7bqsNnt4p+gv
      XW93+b37T5hKxfndS5MMxc4vbfqNOQFCKfmjlUd4+xSKDoISGtyvnPyIPimuZtJMpA2KvYMD
      3rhuYKoaDbdHzowxFE3yqFHCCXwUoRDRNLJmlJhm8KCx2+XRhUrWilG1O3hhiKnopAyLEEnH
      c+gFLgJIGRHezI3yeWmdst1Byj61TgFcx0bRdBRFQYYBvh9imCZC9APw0zQLfWdogsFofOfv
      cqvnouv3CX66oiCE4F/OL3O/cj40alNV+LcuTXJzMHcubtE3hg4tgMmtdN1xENMMyt2zZyqO
      g6Vmi4p9eIzR8320LYW4lufwVXUDe4vwFsiQtucSUQ0GrPiea3VVZTyaRkWj6wXUHJvFVp3l
      VoOKbROEgtlknvfyE5iqxlQiDfR7IBQhQAgMK4KmaSiKgqrpmFZ/8ytCcCWVO9X73g72tyGE
      QFdVUqZJLhJBVRT+z7nH57b5AZwg5F88XOSjtfOZrfC1MAC5JaDUdDyWG20elBvcK9VZrLep
      dO0dv/pyKkdcN45cTyCYTmSpH5NnXlxaoL1ZxJcSKUOklKzdv7tzX0fBCQLa7uE+sKVqvJEd
      4d2BCSKasW+2ZaVTw1BVhiNPmTsCiKoGHxWWqTr7G5kTBNytbPaLXlIyHE0wHN1rSPvhamqA
      wUicmHay6ZVx3SCqH3yNGwT83r0nrLZORj8/DiTwJ4trfFmsnNkIXloM4AYh89Umn29UuFWo
      stToUD8gtxzRVMaTMd4cSnN1IIEmQny5/4bThMLNgRH8QBxbczP0PdZvfYp5+Q1W/+z3icx+
      SC7tszp3F2FEGb8ye+QaQqrAwe7ZaCyFpqhkzChusH+s4AYBG50mEhiLprA0HVPRuFUuHJlK
      DZHcqRRIGCY5K8o7A6N8Wd44sA6hILicynE51XclZpJZvqoeP16aTWZRD9A8lVLyxwurLDYu
      ruk9lJI/eLxMPmYxnjiese+HF24ANdvhXz1a498sbLDS6BwrX93zAx5Vmzyq9v35lKkzk4vw
      9liCTFRDSoml6gxGYswks0Q1nbnK8WsGRiTK4NVLNH2P9OQNIukoVkLDrmyQGr909AKApZiM
      xXRW96Ek56w+92YbMd3cN8BVhOBRc5NQSgxF5XtDs9ypFI7NvZHAveomH45MoSkq7+bHmG+U
      edKsblWOxQ6tYSaZJW08Hd49lUxT7LWPlQodisSZTBzsjj6pN/mscHGTdbbhhSH/36Ml/tO3
      X0M9ZXbohRlAx/X453NL/IsHy0e6C0eh4Xh8ue5xZ6PF9ybz/J2blxlPxnYVT7zg+ISt3Gg/
      R54GuLSdGQkpKRqp5PE6lbww5LXMMGkzylqnrzFqKCoCgReE/Hj9MYpQyJgRMlaEst3elS3Z
      pkIstSq4MkBTVAIp2ej2+wnCIEA5pBUz8AMUTaXu2HR8l6hmcL9eZK3TQFFAQemfjrkxsube
      vLoqFN4fHOPL0sGnBsBoLMnNgWGUA57+oZT80cLqhYqJPYtCp8cXxTLvjwye6voLNwApJR+v
      lfmfP7nPRvt8i1GBlPxkaZPP1iv8h2/O8jeuT6FvtRrt1wAf+g52zwOvS6PaIDMxg6EElNfW
      yYxP4rSaxNJpmsV1tHiWwelpCD3aTRvhd3FDnXhMp1HvkhsZ3LWJNKUfcI7FUozFUgRhyJ1q
      4bkcfkCv61HothiOJXACn47voAgFS9Wo2V1UoWKpCjcyI9iBt5P1Wn48TzwawcrkCbodUCQ9
      R5JNR6jVbVobG0y/9xYCSdN1qLu9PaeRL0PmagW+OzSFtk9vg66ovD84xmavw3KrTsXu0vP7
      gbqhqMwkM8ymMjvB/H54WK1fSNHxMHy0VuTmYA79FL3aF2oAfhjyv996zO/NLV6oBn7XC/gn
      nz/iTrHG3/vuDTIRc98ArddoUN6sMDwxil0p4IzMoCoeeB1W78/j2U1m37qJ57qU5h9x+e23
      KD1+SLFmMzU9yur9u0xdu0RtdZXk4ACG9vQDf/b1pJQ8aVb3LWBB318vdFp8e3CCqG5wr1bc
      k0KdqxWYSTyTnQk9Hnw6x9BrN2is10jGA776dJHh2STlgsflN566akEYUrT3f4r3Ao+Ga5Oz
      Yvv+XAiBqWp4IbRdf4cmbhNyq7zJXLXMgBXlejbHcDS+6yEggc+fm5n2IlDpOSw121zOHD9L
      uI0LM4Ce5/OPfvYVP1vZW8a/KHy8Vubv/egT/uEP3iVjmbsIYwCx3CDNegMjFkNLDpKMqshQ
      o1PvYg2OEY1pCEXgdnqMXX+N0GmxMPcAJ9AYH8sgVJMwDEiPPz1ptjEQeUrqCqRkoXV4DBLS
      /50BK7Zv/aDh2iw+s0YinSU3MoxpRbj05jCd8jKTV2fITySxYjbpgdyO4nRE0w+kVUO/76Bk
      t8kYEQYjiZ1NHIQhdyqb3KuWD4zNvDBko9tmo9tmPJ7kg+FRTLW/jTqux1Lj6BbQi8Bcucal
      dPLEtYELMQDbD/iHP77NJ+sv/mmw1uryD/7kU/7b33yXuK7TfGbMUW3pEaXlFWKZPJnxCVrr
      C3hKFMf3SZkqG/cXcdyATqmApxroQuHbf/1vUi8V6ZUKWIkEneomjZpPeiiPrvY/bFUIRmJP
      n6gtzzl0A26j6vRwDqEQNFx7p4k/NzxKbnh052fpgTcYu97//8mrT6/RFYVir3lgelAAK50q
      oZSsd+pENIOkYRHIkI8Kayy3js/1X2036ay4/Mb4FBFNp9Dp4pyA4rDzPh89wrxyhe7qMlIG
      uD2P4StXOcleXmm2kVvv7yQ4dwPwgpD/4aO7L2Xzb6PYsflv/uwWf/X6yC4DyExdITN1Zefv
      YWwaoSjkRvoandnhLa3Oa1d31QDS+SHS+adtfmPPvd5QLErKfFqfOK62z7Yy3EGQSMZiSR43
      jp/Rmoin8aXHcDRB2JF7sk0ziRwb3TquDJCwM8TiVql4os2/jZpj87P1Ff7y+DSbp/T9A7tf
      6/Ech837nzJ486+caPMDVHsOXhBiaieLA869EPZ7c4v86WLhvJc9MVaaHX70aIPD6iSKohz4
      xBBCoBwztXYzv7upI3aMYh1AXDOIqAcXkxQhuJTMHruoFdcNNEXQ8TyWW3U0RSVvxUkbFiPR
      JDdzo6QMi5QRwVQ0LifzpAyLUq/Lw9rxjex5bPa6PKpXqTunq7zHRrMs/vTP8YXF6FvfIegU
      T9xwE0h5Krr7uZ4Adzdr/NPbj89zyTNhodbB0GA6d3E9p1nL5Fo2jRcEdHwPQd8AcmaUinN4
      885YLIUiBM36/jycQSuOpem8kx89Mj2ZNiw0RexSjrADH1UIorrOZDzNvVpxp6dZwI77NVct
      7+ojPg3u1coE3smqydswc2O8/uvPn6snh+Of3P06NwOw/YB//Mn9r93Ew/lKl3zCJHYBOv+K
      ENwczPJxcYWK3d3ZQooQxHWjf/qI/f3SnBVlLJ5CSqi7vT0Zo6RhcT0ztLPelXQORQgK3RaB
      lKhbPJ+EbjKZSKMrCneqG3teJ5ASxw941CjtauiXwFK7RkQ1TjQz4SD0fJ+Oc3A849sdXFdi
      Whp21yWaSkLo0Wm0MCMm3VabSCpLYLfQokk0TaXXqGHEk9i1KugmugauD4n0/tme0zTRnJsB
      /NH8GvPVl6/3/jyCULJctbkxEjv34sxw3GCtW9vz7AxlPxcP/frAsxagCEFUM0AKfrqxSCAl
      hqIQ1y0iqoYvQ0aiCUaiKVQhKHZbPKiXdtbrr9HvEb6RGyJvxRBCHEjFhv5YqOcp19t4UD84
      43NSHMbUbW0WKK8XyY6PUV9bYfTm95CdKrWFR6j5GdzNxzQjKRxPMHr1KopdZPn+JtGURVQX
      lDYbRIyA2MjMgQZgndD/h3OKARw/4PfmFs9jqQvBSr3LdCJ9rm12+ZhO1BBHbp4glFxJ5Xln
      YIz38uOMRpO0XIeS3aHreziBT8tzqTs2XiixVJUBK44qBEutOp9uru7a/Nvo+C6fba6x2Wsj
      pTzivQkOinZOQi8/CqZ28D2oukZu+iqWqZEcu4RlKuiGjpYZZ3hiBDMxQCqm43TrlJbWUGJD
      RA2Hdq1BNBll6NprGKZB6cnivowrQ1WIHULOOwjnYgA/WS5S7Hx9hzxI4FGpze/OTmGdcSSp
      IgRvDw6Qi2rHylRIYKlZZ8CK0fM9ltuNA42mbHdwA4mlajRcm7na4T26wZaygx34DBxQ2ALI
      WhGGInu14bZ7CM4LCePg4L++tkp1bYXa+jq19VU2Hj2ksVmkWVyl0+4Syw2RmLxE1DCIxqBc
      qBL6AaPXb+BhkMklUTWVaC6376YdjEZOJX9/5oYYCfyDP/mULzZOn0V4EUgYOv/bv/MhXhjy
      b5ZXWG6evGCTsUx+MDlOgMfd6skKfO8PjnG3WtxX+e15fDA0wVKzdmxFicupHNfSee7VNlnt
      7Obe64rKVCKNH4YUe62d1kVVCK6kBnH8kF8Wz6dldDye5JerNdrHaJYPfA9F0/c9l8LAB6Gi
      nGBD/9rEMD+cPrjv+SCcOQYodXrMbZ7v0ISLQMv1+Gy9wl+eGeHfu3qZpWaLz4slVlvtQ9mW
      ihAMRiPczA9wPZdBUxR+WVw58es/qpePtfkBVtoNqk6XXmWdu3PLXH/vXVbvfIKWHkd3qnRk
      hPGpUaKWSseRbBomV9N5slaEkt3CCQI0RUEVgqRh8eSZCTRXU3lSRoSYbqAJheopOsEOwlA0
      xrVsyGfHoEOoh/QfKOrJtqUiBDcGTje85MwGMFdq4JyAefky8UWhyl+eGUEIwXQqyVQyQdvz
      2Gh32Oz2aLl98pkq+v7kQNRiNBYjY+0e8Oyeotp5lBr1s2i5/aJOr9TmyndusnTnPrFMHru+
      iUxkSAQNlh4t4HY63PjwO/R8f5c0uhB990gRCtXnUrHlLan2pXaVyXiGjBkhqulnlihXEIzE
      4iT1CJ8Xzi+wPg4mk3GGYqdz5c5sAHeKRwswfV1wr1THD0M0RUFKSdf3WOvUqThdfBGQjmoM
      RlKMx1N9KvMBTv5pJsQYirqvZPt+0BVl6/gPsTsdpFBYu/8Vozc+oDZ/m2VHY/bKJC4uruMj
      TW1X/n8boZTb8yt20PZd6s0+V7/t2XxncIbL6Qy3y2fjbI3E4iR0g4QO13Np7p1jG+RhEMBf
      mhg5dYLjTAYgpWT5nMhPSdOg7bg7qpuqqpDQNLqui3tOj5Nix8b2A2K6YKFZ5X69tKvi2PZc
      KnaXx40Kb+VGGI7tLyo+YMUodE/2vmeSGe7Xj9ckko/EkUB3LM/8ow2uvfU6wbVZrGiUkZEM
      ipD0nJBEfJZuz8VQYgT75EZCKRmKJHbIdppQmIpndiRY+v3CcDWdY7HZ2DfbdBxoQuFmfmjn
      gfHDmXEWGi3sUxSmToob+QwzmdMPGj9TFsgLQzbPKfuTjZpMpBN8OJEnH4vw65ODTKfi5C2D
      b43nyRlnT1jZfkCl67DQrDJX2zyw3O6GAZ+X1ij1dm/yvip1G0NVTqRPE9cNphIZcubRFWlV
      KIzHU0wnMhiJHK+/+wa6pmBF+9da0ShGJEYqnUDRdBKJGNfS+QPXqzvd/igmReNb+SnGYmnG
      YmkGrDg3MqOoQsFQVb47PIZ+iq4qAbw3OEzqGQn2rGXy2zPjJyamnRQZy+B3ZifP9DpnM4BA
      0jtHK49rgvu1DpdSMZYbHRRNIxuNMJ1KcDl5PhryhU7nWE/i7R7bZ/PkduBxq7LGg0aR6S3l
      haOgCMEb2SE0ReGN3NAOdXg/COCN7BCmojISTeyI1h6Gq+kBRmNJRqN7f1fdkh0EcMP+IL6f
      F56w2q5TsTvUnd4O4S9jRfhwdOJEaWJVCL49NMZsKrPLXRRC8M7QAN8bv7hB4FFN499/7RJx
      43T0i22cyQUKpTxVQLgf1psdFMCT8FnPYSxh8aBUxQ9D6r5PpX0+J82jepX0wSnzXej6HqVe
      h8FInJLdwg0CIqqOKpSd4XMPaqUDAz5VCN4aGN7RzonrJh8MTfBVpbBH4cFSNUZiCUBSdbqk
      zQhv5oYxFZWFVm3PaaUKhZwVxQlCPtlcQwC60FCU/lpx3UQA692nDM/V9lO/PNyaKZazotRd
      m6V2rS/wG9Fou4KuGxzKDxqMxHg7P0TO2l+2UAjBD6bHCKXkF2tHa46eBDFd485GL08AACAA
      SURBVG+9fpmR+DG/yENwpjpAy/H42//PT+h4L3fa90nwH703QiZ6fLufSqTxpL+TTYmoOmkj
      gi9DLFUnlJKG41CxuwRSIug/9SOqQdqMoAiFUEpMVSVjWgxEomiKQsO1qTld/DDEVDWKvdau
      0U5Jw+Lt3CimotH1+22Ubc9BIBBCUOi2983cKEKQNkxUpe//r3f7hbesGaXY3TsSKmvFKNt7
      G+EnYxnCUFCyu3Q9DynB0jSSpoGUIQEBEknaiDKdyGCp2r6GEErJZ4USP3qyci48sZF4lL95
      bYaBiHXi5pf9cCYD6Ho+f/f//emJpbLjkShvpQ3KvmDIEPxkrUo+HmPQFNytdPjt2WH+6MkG
      35sa5s5KEVfVeHsoTa3dJRWPstloMZBM4js9bpVPxj/6Tz4YI3qCeCJpmLhy90aL6+auARhX
      U4OMRJO0PZelZoOlZmNXH8Kz0BWF6WSaG7kBElt+c6Hb5PY+RLYBK8Y7z014rNk9PiouH6kU
      kTJMLE0Q0XTeyo5tNbws7slESfafphPVdF5PD7HSqRPRdGYTOSTwWWl1D6/IUFTeH5wg8dwc
      ZjcIaHsutu+x2bX5aHWTza59KEX9IFiayndGh/hwfHhPN95ZcCYXSFcUorp2QgMQzMR1OqGg
      0nOZ2poPW2p3SBsJRlJxAt8jE4uhhAGqAMfz2Gjb6IpKztCwLYN2p4Oun/z2I6oGHL9uEdcN
      aq733JSV3e+30G2SNWJ8Utig2D1cVsQLQx7Vqyw1G7w7OMzldIbSPk9g6A/Cc8NgJ27wwoDP
      SmvHkklpuA6KsJC4LLarlHpthAIiZKdzaiyWZrXb2Ld7zPZ9blfXdzrbFPq8p/1IdW4YcK9W
      5FuD/YC047ncr5VZ77R2dYjlkwqpqEWtF1Dt+gTHOBFSpsFbgzneH86TNPVzV4k+kwFoimA4
      HmGtdfTQim0oikDXdSbiJgH9ppOBqIWu6bw2kGK+1iYdizFuBySjEUaTMTJC5Xo6wlylSdML
      iGkayUgU75BpkPshpmtMp9IstU/WYZXxIyy2KgRbaUVgVx+vG4T80dKTExW73DDgF4U1er5H
      IPaPoyRyV2vlUqt+otdouA6XU5ldytP5SJzJeIaIqqMpKoVeC1fuff1+/eDpBnUCn9ohVeOG
      Y+P4HhW7xyfF9QOFvAxNYSihMJ60GI6kaDk+lZ5Nzw+23EGVhKmT30p+DMciKEJcmDz6mQxA
      CMFUOs5nG8cfBxqGIZ+vl/l86+9fAQMRk41mi99v9jfVXKkfrN3ZrBG3THynzUK1H8wtNY5v
      bM9jOB7hcjrLRrdxLFpC2oiQs6KYnkax26LtudScHknDIq6bdD0XU9VZa3ZPXQ2/Xd5kNLF/
      MBfRdKytjjEp5Yl5+6GUe+oVfTFeQaHXQhGCjBndtyl/OpFDIFlqVzEVjcl4hrK9dzjfNiSS
      pVaDu5XSsZprPBlQcpp8f2xqxxV8GTizM/XWUOboXzoC5d7BBZi27WCfUwrhxmAaS9V4Kzdy
      ID14G7qicCM3SMO1+ay8StNz+pr7gc9mr40mVAxVpeeGZ6KCSKDSs/do7QhgNJqi6dpb2v3h
      iZ7+2zCU3ZPmO77LLzeXedgocb++yWavhSb6vCHoB9HT8SwziSwziRxT8SwSeNjYPFAKEfrV
      5rnq8Tb/NuzA55fFtWP3UF8EzkyFeG0gRVRX6XoXX/U7K94b6etgDscSfEsZ506lsG8mJarp
      qArcrW3gBgH+Pj5y1ekyk8jxSf3s/c+2HzAdH8YJPTq+SyglLdfmcbPMY/pB5rX00KmEYGO6
      wVvJIUp2m4Zr74k3ttWp38qOUnE6lOw2JbtFTO+fPttEuu3m/YNG0HrhyWcMQL+pfqXdZDp5
      vLrKeePMJ0A6YnJz+HRMvBeJbMTYdZ/5SJxfH53h3fwYU4kMY7Eks8ksHwxNcD2Tx5cBTuAf
      6ns+qddP9aXvh/V2h9cyQ7w3ME4gw11P0n6QWeAUdHdimkHCsJhNDhzo9klgvllmvdvACwN6
      gceD+uauGgL0VbdfywwSfYbJqSsKM4ksXnD6z2Gx+fLYxGc+AQTwVy6N8dHKxYuhngW/PjlE
      9Lmska6o/SpqbDeXxAsDKnaCju+gK9qBze2n5c7sh0K3TSglXd/dd8awL0N0RT3RaCEBDEaf
      xheHaRB1fXdXg0+IRBPKrid+XDe2pB/TOydVXDMob9VAAELfpdXsEE+lUFUFZIgfSLR92hUD
      30fVNGpOb4ek+KJxLq/47bEBptOnl6i+aGiK4G+8NnXs39cVlZlkbutLDveNF2Kagdj++GTA
      4tyDI/PbvmMThNBr7yXSOUGA7fuHyoFMbDW/HxfD0QTJZ3LzCf3gkaTPUzQUBIORBEORJLqi
      MhRJ8FZ2FEUoO834KcNCVZRdbmTryTwLS094NPeY9cePcRqbzC9ssPbgIb1ej+LiIo1Gl8rK
      Ivdu3QP6wfpxZoxdBM6lKV5TFP7WjRn+u5/dOY/lzh0/mBlhJH48vnjP95hvlmh7fdHaS8kB
      fBlyv76JHfgIIGNGuZrKs9roT6206yUqG5vkJkdY/nKOeCZKtdBm7OoQG4tVcvkohfU6cbWJ
      l71KLuqzdLsE8Twx2vTUFNduXGapXaPr2+iKsifXrwrBWCyJpeh8Xj66g8tSNaaTaXqBR0Tt
      589nElkqdmdPoKoKQUzTMaWKH4ZbG9ziduVpOtPxfXRl/+0idj0gAlr1FrrhYpuDPLn3CJEc
      4MGdWyRLRQxzAKNwGxlNY+jqM2u8HJzbmfP96SHe+RrGAmnL4O/cvHysPHIoJV9WVin2WnR8
      l0D22wjzVpw3MiMMWDEGrBjjsRSWqu9kV4qP5/GcGov3l8mMT+M5Hrr0eXLnDpVCgV5oMjk+
      SHpiinQuS7fVIDY0QcxSKSw+Zv7ufQQCJ/Cob80QezZz0+ceDdDxXDSlP9LosJMgpumYGtyu
      rvHz4gL36/1xQinD4u2BMWLa097dlGGRNizqbo+25zCbzPHB4DQVe/d845rbO7B+8qwwsJke
      5v3f+D7X3n2dxsYauYkZMukEmZEx8sMjjF+aZHBqCr9ZRrWiO+/POmEX2Hnh3F5VUxT+829d
      57/+Vx+fK0P0LBDAf/z2ZfKx400j7/runsmLZbvDQqvK4+bTLqeS3WHQimNqKnbgM/Lmt5gy
      TZxeF1Uz2Kgvst7z+eCHv0Wz2iY1kOkHsCKk1egxdP1NhKIBknQ2wTW9v+F1RUECRbuFQDAV
      zxDXTap2l/l6edeGjOk6CT1Cx3Pp+R6KECQNk9FYkrZv7+oNXus2GIwkyJpRnMDfkX0UQBhK
      fPH0ROh4Lm3N2Tdgbh4grZI2rJ1TyxrcomZHUrzz/b+08ztDY8/268bIjozs/C1nRU494OKs
      OPcpkT+aX+O//+juC22JOwi/OTPC3//wjV1P0yDsV1dD2TcQVRGoW5VGN/D5aeHJLhdBE/0v
      dr/303P7c83OAwlDJ27tPqXSRoS4Zu1SiX4WpqoxEU8xGc+ibck8CiG4VVmjZO+OM15LD+EG
      AQ8b+ycrMmYEJ/Bww6DfvRYEe97zZDzNtfTQvtd/vrnOk1Nmc74zPM54/PRNLWfBuZ87v3Vp
      lKVGm38+t3TeS58Ibwym+S+/fZ0glCw0WzysNFhutCl3bbqejxeGqEJgqCppy2AkHuVyNknW
      SFBx+3O6dEUhbUQp9vbv/orp6rkZwGg8TtPfnaNveQ6V3sGVbyfwqTs2E/HdukA5M7rLANQt
      zf97tYPbHnu+t5MFcsOA4WiSQre5YwSWqjEVP9jFvZ7Ns/Yc9+c4GIrEGD2g8+5F4ELmBPth
      yP/4izl+9PjiJrQfhkuZBH//wze4s1nl0/US1Z5z7BPJVBXGUhG+PTbAt0eGKNsd5ur7q64N
      RRJstHqUDtmkx0FE0/irM5f5vLyySy1aEyq2f3h2JKLp/NrIDKro9znbgU/X91hp12h5fQKh
      qaqkjCiPDnj6b2MinqJid0ibUW5kRmi4PdY7LdaaXVxPULfd/tCMLdWJiK4yEIkwlohyKZOi
      F7p8tLFy7NpIXDf4/tjUnnGrLxIXNig7CCX/5POH/N/3ll6oO3Q5m+CD8RxfFCq4Z1SrmEkn
      +J3LYxS9yr7pybeyI3Q8j4/W18/0HsficQZjFqEMCWTfRRuw4vR8j6XW4aIDmqLwl0Yusdlr
      87hR3cXWVIVC1orQ8XtYmkbnCPXkdwfGyUfihFLyuNbkl2ubzJVrx2KfCmAqnWA2E8eWvSOn
      WqZNi+uZ3JZUpE7SsM5Vue+4uNBJ8UEo+dHjNf6XTx9ceIO0AK4NJDE1ca4NOqoQXB+Mcylv
      7BJqmoilmU1m+ai4iCI1lrcGNJwUOStCKqLsPPkHrDg3s6MIIVhq1Q7V/IS+a5LQI6x19h/H
      BH1+Tz4Spe4eflL9+sgs1a7LH8wv87jWPLVRJ02d2VyMTFSj4z1NKgj6KnWWptINnF3tpmnD
      4kZ2ZE9PwUXjQg0AtuZl1dr840/u8dUFCWjloxbXBhKUur1zoyY8j5GExV+7Pkbc1MiaUdJb
      koILrQpO4KOi82lx40SvPxKL88HwKJ+Ul3ZOGE0ofH+kn7bt+R4/3Xhy6JpS9nk4R0ERYmui
      zf6/O2DGqLThTxfXz+0zvJZL8cFElrFYf3RRVNOpOV2+rKztexeWqvHdoelD+6bPGxduANvw
      w5B//WSDf3Z3gZXm2XzmbSRNnd+9Mk5EV/jpcuHCXa3heIT/6ls3iBsaT1plFCFww4BKr4MQ
      AicIado+Xc8/9F4imsaNXJ7hWJSG22OlXd/p1Iqo+tY0eb0vO9Oucb+2ue96CgL7BG6epapE
      dHUPAdBSDR4UbearB58ip0UuYvK337rGSDyKlJKfFRdoewc3UM0mclw9ROXivPHCDGAbth/w
      0comP3q8xq1C7VRPm+l0nN+aHeWHsyN8Uajwf91beGFxxmQyxr/7xjjLnQqKEEjJrvegCsHl
      5CDlnk2516XjuYQSTFVFU/utfRGtz0F63CwRyD7nRlUUMmaUrufR80Kk7J8AAE7oIwkxFIGy
      NY51JJrEDcJDXZ/98OHIFF3foe70tuYYWPzBw3UW6hcnbR83dP6zd18jYWr8dGPhUMp0yrD4
      7tD0hd3L83jhBrANKSVrrQ4frRb5olCl0LJpOv02OX8r764pCoaqkLEMJlIx3hzMcHM4y1Sq
      r4n/oFLnf/r4xdccXs+n+LWZPn13v3bGS8kBZpNPR5xKKdnoNmm6PQq9FoEMd5HMBIK0EaHU
      tY8cMzQYifKt4THiusGfrj6mdcjTdD+8mRtmJtnv4QjCkP/jq3m+Kl28sHHGMvnbNy/zVW1/
      92cbCd3kw+GZC7+fbbzw+nMoJevtJvONKnXHRjEk703GgBgKCikjwkwyQ1TT0VUFU1WJ6ntl
      Ctuuxz+9Pf9SCm5zpQbvDOe5lo8d0M+7+64CGTLfLCGlJGNGaXs2WTPGZq+FL0NUobDS7B6L
      ELbZ6/Lj1SU+HJ08VnbmeWwHnlJKfrpSeCGbH6BmO/zLRyvM5rVDM0TJQwh7F4EXWn/2goCP
      C6t8XFyjYu8NWENCam6H29V1POmSsQxixl65DSklfzi/QuWQTrKLxu8/WEJIbc+QO1UIclaM
      Uq/Dw3qZueomS60G47EMo7E0Xb/fRrnRbaApKq+lh3E8cSI2ZMtz+fHa6dLLhtInoJW6Nn+8
      sHqKFU6P+WqTcvvgbKCCYCpx9g7Dk+CFnQB+GPJRYeVYRSM/DPllcY33kUzEU3sMoNJz+OnK
      4enBi0bL9fjxUoHfujTGg/omHc/FVFVM1eCXxbV9O80GrCjj8RSPm30xLTvwWGm1Dm02Pwj9
      6TKgqydrGM9ZUSTwh49XzlwnOQ0ebnb43evDlJ3d1XVNKLyeGXrhadAXYgBSSuaqmyeqmErg
      i80CGTOy0zQdhCFztQ1ub3Reypf3PD5aKfLbs2O8OzBOICUP6iXmD5npW7a71B0bSxMgJKai
      sdI6feYlkKBKUI+5/wesKHHdoNjuMld+Oarebc+nayt8e2iSzV6butN3/YYjiZ3U8ovEC3GB
      Op7H48bJP3BfhsxVn5bvq04HJwi5Vfh6SLK3PZ/bxSpCCNY6zUM3/zZ8GWL7kjcyowxa6XPI
      uR9v9+uKyhu5YYQQfLJ+sDDwi8Cn6yWSuoWlarS9fkFspVPn58UF1rvnn4o9DC/EAFbbzVN/
      4IVOGyfwtyQ+WjR6AW336yPF+EWxghcGPKgdvyXUlyFrnRYV++z1EFUopMzD3QZTVXl/cIyk
      YeIF4Ut7+m+j2OnxpF5nvrFbV1UCD+qbO+nfF4EXYgDbX7QMQ9YWFpChzfLj5wMwSbAPXcKX
      IQ3Hoee7lO02y2fQBboIzFebPKpX6J2wpa/QbVO1zy746wUBk/EU3xmaIB+J9and9FOrlqqR
      NAyiusrjZom1ToNKz6Z6jOSBlBK32yG4AFdTAp8W9hfMDWRI3TmZ4NlZ8EJigN4Wo1GGIYu3
      b6P6NqvFDqpXxzfSxC0FzRI0ij7dxiqZsQk2lla5+t57RCM6a50GvcAma0W5Y5+OTlG4/RHd
      jmTi/Q/Q9d0N2jL0cKolOr5BbnjgROs6fsBa63A5xP3ghQHnQY8KkbQ8h5lkjsFoHDcIdsSv
      QiSflpZwQokT+tyrFxB+5FjZo+byI+qNHpnxaYTXxkjnCTotUBWcbg8FiGVSNMsNEgNp2uUq
      sYEBdEPF9xX0IwaTb3ZsBhLRfSdtvkhO3AsxgGdZfgODGZbWGmTiCnc/uU3+8us0ugVG3nmL
      emGN2OgEtY11pi6NUNgoMzs7Qt3tEtL/Youd0z0dfNsmDFSaCw+wQ4X2/KeQvUZEVNEGLmP6
      XdzoyTY/9J9mm50e8cjJvzVVCM7qzClCYAceTdcmaVgYqrozwqnQbe6JMY4bdPe6HpnBFNWl
      +1QePCJ34w38pkMsZeL2bJREDLteZWXuFtnp68TiCt1Wj8Btk7/2FkcRnD2/f+/yOXPUtyri
      LwovxAAShkHN6SFUlck332aoF6IZCtlMkh5R8vlLhIHH7DtvUl5+SO7KVdYfL3L1nZsAjEaT
      bNpNUnqMIDzdCaBoGoojCVWToUujOKUCigG9qkN+0kC27L6MxynQ18Q5uQFkrQgbnbONmDJV
      la7vUug22diSb+zP/7WI6QaC3ZtMhse7z+z4MCt375ManwbXJZEbxByJIehXnoWl45QrZCZn
      SQwOk85FsW2FwoMKlnn05+gEIRFN2xIe67tZqhBcTQ1uUUzkhemBPosXQoVYbTf5uHC6oktc
      N/j++DSfbC7h+AH/6l71a9NzvI3vTw8SiRxOgHsepqoym8zy5ebZhkdcz+bo+v35BM+vs93x
      ZqoKbuiTM2M83HT4dONiNJz8XhsfAyty8MDsbcQNjf/grSlGokkeNyoUuu3+aSXZ6W8ej6fI
      R2IX2jDzQoLg0ViCAet0x9qN3CCmonI5NUBUN441DTz0bda//IRuq0vl0Vd0Wl1A0lh6SHWt
      iAx9aqur+J0a63P3CCWEbpe127fwPZuNu3fwXYfCnc/pHWMG2lA0zlD0ZLpIcV1ntVNhJHZ6
      PSVTVVnr1Cnvs/mhT9Lr+T6OH6IJFV8GmEeMQPK7DRZ++TMq6xssf/oR9VIdCFj/8lNW7j+k
      OPc5K3MPKd2/xcKtr5BS0lybZ/7jT3C7LZY/+wXtaoknH/+U+iGzGyxNYziS5JPiGkutBk7Q
      V4f2ZYgbBpTtLl+WN/jztQXKvZPHWMfFCzEARQjeGRw58sN/HlOJNGOxBCESKUHbUk44EkIh
      kk5RX75PIJI0VxdB+rTKNdqldVprC1QLRYr37mKl0wgk5Qd30RNp2ssLxEeylBc3SIyN0j4G
      VyZmaLyZHdqaPXA0EoZB2jT7QlWKf+LPBfpEQVNTjlVH6AU+cc3iZm6clHX401mNJMmNT+C3
      S3QaPYLABxRyl2YxTIHUsmhaQLfVQN2SQ+l2Ayamkqwu1Jj94DVaVciNjXDYVxXXNT4vrdPa
      RwXvWbhhwKeba4dSqM+CF8YFShomHwyPH/vLHo8neXtr9OZSq8q9egFfBqSP+AIBCEO0SIww
      cCEMAdn/UzWQgUN5cYHW8jKhqtErrtDruaCoKE6BSqmLDALAo9vwyE2OHPVquNLmVnWNjGXu
      0s3cD4aqkDVNrqQG6QUubujzei53onbAvnJ1X7/0uNjsdZBSko8eTjbrFRdYuD2HYsTRIxrN
      wgbdepmHf/rneG6IXV2mXesQT2dpbqzTazTA67B4f5VUWvDkoy8I7DUW7y4QHtKoE+DvO2xj
      P7hhwMNa6VTiwEfhhdKht4dT3y4Xd7Qwn4elakwl0wxH4wQyxFI1ir0mK50aEVVnqRzyk+XD
      eUCh22Vj7i7ZK29iFxewhiZoF0oYukegpcmODmK3W2hKQHm1hKZI0pPjbM4vMHz1CqX5eTJj
      g6zfe0hq8hqZ4dyBr5WOaPzgSnondXc5madsd3cFt0L0pVeGo3EMVaArKhkzyka3Sc6MMRxN
      UtsaLNE4Qm80ZZp8MDRGxenuqDxsPnnA6kaTobERRqfH6TZq1At1Bq/N7MrGfGdoAkPo/KOP
      bh3IJJVS9tvMtt5Q6PfotXxi6fi++clWaZNEfnC/heCQwRbXBiPk48d4mG1BEwq/OXHp3LvF
      Xng/gJSSQq/JfKNCx/NI6REMRcPUVFShULG71JzdTFFDUUkYOjcHRnhcbfO/fv7gRd7yoZjK
      RHh/8qkAra6ouGGAlJKYbnI9NcT9enFHcEvQlyjctFt0fZdfG376pW50Gzxu1Oh5wVY+v/+E
      t1SNrBVBVwVNv0NE1TFVg9V2P6X58NZXXL35Bvd//hNqdZ/RayP0Si5GzOEXf3KLv/Zf/F3i
      hso7A6MMWFH+yRcPWG6ez4Dz00AVgvcm4hjayRyQ7w1PMhA5+2TIZ/HC5bg2ey3u1go4oYem
      glQC3hkcJqGbzDcqu5SGt+GGARXb5tPiOiOJflP11wVXMikSWyNJc2ZsJ6UnhKDru7s2P/Qn
      qSy0KgxHkryeGd6hJ0spiWkmcc3cagRSiek6Q9EYVzM53h0cQSghoZR0fHfXnDIDh89/9glG
      epgrlyewXQcUBdfxGZmd2BH3XenU+GhzgcHEy5Eh3MZYMoqln/w7PEpp4jR44Z/E8w0kXd/l
      UaPC/Wr5yHRg03P4qlrgai7J7eLLJ8RpiuDqQIKyW0cCw9EkHd/dpe3z/EA9eNouM7I13DoI
      Q+7VyjyqV/YYf8tz2ei2uVcrkbHMrUkugrwV36FSTN98j+lnrnm2nHf9/f6fuqJs1QwkNwbT
      zG226b6E8bYCmM1FCOTJ+T4XoR/6wk+APTldCfP16rFz4W3PZSxlvDQ14WcxlYnQ9J/GMnbg
      MRxN9vPvisqVZP7AHPa2FqaUkvu1Mvdr5UMzOk4QUOh0sZQIeStO2WmRNY9PHx6LpXgzO8o7
      AxNczwzyaxMXN8X9MEym4vzW1MyJXZnt4d/njRduAJPxTF/9mH4wGNOsk7f2qT7XB1IXc4PH
      hK4o/M1rl/j/2zvzIDnO8z4/fc59X3sfwC4OggAJEiRBUiQlUi5RdyqWZUWUUlaVY1fs2I4P
      5Y9UKlLZqUpUSWyXnZSr4iu2FB+SacmXVNZBiRTBGyDua7H37uw1s3Of3dOdP2ax2GN29piZ
      BRbEU4UqYDDb3TP7vd3f937v+/u5VCuSIOFV7YymFxlJx9ENE5uk0mZ30+VYb/2jiBJhWzX/
      P5ZJciURW/eejZjKZqgYAg8FuzkaaF+eQtXDpagc9AZRRAm/xY4kiDzV3U7Yvrv197Io8IkD
      fSiixH739pTEe13eZR+zZrLrAaCIEg8GOnk80s8TkX5kYfuPtYpp8nRf5LauBQ6E7EwV5qua
      QIJAsrxaDS1ZLnAlMUdWK+FUVJSlgWqXFR4MdGKVFIq6xrnY9jvbbqQSFDQdt2rh0XBX3dSr
      z2Lj0Ug36prpg0WW+MnD/dsy3GiU5/q66FpyxAzZHHQ7t3YT81qs7PP4W1IacVs0qQWh6mCu
      iNKOa789VpmPH+hp8pVtjU6Xg48f6MUiydznbaPfHaiZ0o0Vs8wXMmiVyoppks58IVOVH0wl
      0HfQ2G6YJkOpxWqTvdXOk+19dDnd2GQFVZSwSjJhm5PjwQ4eb+vBLtdON/Z5XHziQO+uTCcf
      iAR4prd9+foN0+SIP7JpEPgtNh4Jdy3fQJrN7U0HwI71IDNaCcVaYDDoYCjWuq3ytbhUhS88
      OEiHy0GPqzq9SWm1N3QkQeSAN8zlxC0nScM0Gc8msMlKQ4Vws7mqFON8PsOV5Nyynr/XauV+
      XzsOZfMcuyAIPNoRpqhX+M7wZMu6xA4FvDzT28aZuTnm83kymoa+pM7tUBQQZBAqKGK1cE8S
      RJyKSo/LS5fTjVjHnrVRbnsAuFQLsR10RrlUC2ktz7P7wmiVOcYSrW+UsUgSP/vQwXXG1n6L
      HXUp/7+SsM25oanEVDZVs3F+q5SNCrFCjouJ1XKMqXKRi4szPBLu3tLAEQSBp3vasSsy37o2
      tiOplXr0eBy47SLfGa0tXpZdIdjrUhWOhUIMeL2o4nopnFZwe2w5VtC5A214p6LS4/TyRKSf
      kqHx/n1+DgZbqzHvtij80qP3MeCvPrJNqunLkl7BMOCAJ4K65KElCgJhm5MD3ho7pEvoptHw
      HXcyV9umNaUVt1U7IwgCJ9pD/MKJI3S5m7PRZFdk+nx2VNVksVjcUpYvU9Y4NR3l5cmpbblh
      NsJtfwIErHbCNgfz26j4O+gNLk+dOh0eribnuK9DxW31cDaaafpdbMDn5nPHBvDbLAwvphla
      TDGeyhLPFynolWVjOUWq/ul0OfCEVPLlCmGbc5Vd0U067G4ShfhGWrVbot4dUt/AE7gWN30F
      nKrEC/cPcGF+kTen53eku2SVJY63BdHRdiT3AjCWTpMZGeHD/f2r/Mda9ciQggAAH/ZJREFU
      wW2TRlxJXtd4NTq+pSlBn8vLA8G25V/+1eQc00sDzG9x4Fc8/PWlEcaSjW/122WJ5we6Od4e
      4I2ped7egdnGgYCHfQErgqRhUPXl6nR4OegN88Op0R0PEosk8UiknfOLM+v+TxZE3tfWvy7z
      sxLTNMloZW4kE0xm0xQ0jcqSb5goilhEmZJmkilWiGbyGwr+ClRTwl1uJ8cifu4P+XlnbpYb
      ycaVwNscDj7c39pM1W0LAMM0q4ZsWtWL1zBhKBXf0HxaEgQGPAEO+oKrFs7pcpELi1EqpoFL
      sVKo6JQqOtOpIqOxEvPZ0ralR7xWlZOdYU52hTkzG+MHo9GG/Q36vU4+NNDBPq8Hq1RVu7ua
      iHExvrFtUd3jub0cD7VzcXGG2cKtunsRgUO+cM39h5vohsH52DxXE7WNP1Zys/LUr9pJFEuM
      phLkNA2rLGNQQZUFBrw+9nsCyKLI9cVFfjTVPMW5B0MhHmlra9l64PYUw+WzXE0ukCqtnhvK
      gogsithlFc2oUDEMLJJMwGan1+XFrdbeCdQNg9FMnNE1ZnKyINJjDzGymOXtmTlSRb2mpIoi
      ioQdNvb7XBwJ+RgMeIjli3z1whDRTPMW16ok8vz+Lp7r70QUBEoVnX8eH67pyFgPSRB4tqsf
      WRSJFwtMZBPk9TJ2WeGQL0zAYt9wwBR1nR9HJ5nLby9z1uvy8ER7JyOZGMWKTknXSZZv9WeH
      bS4OeiO8eP36qoVto0iCwE8dPIhb3Xrl6HbY1QComAbnY7OMZeo/HlVR4pFwJ0GbY9n5sB66
      YfDj2eGac//upenG6YVJirpOplxGq4BdVhnwBHGrKm5LtdNMWNJsPjsX5/9duEGpRepzD0YC
      vHB0AKssMZ1N8+bsdF3J8LV0OlxoRoWFwvpOMEUU6XV5OeQLYpVXT4EqhsFLU+PbHvw32e/x
      8lhbJ+lygXcWJlf9nwB4FQ+n53b2RKvH0WCQxzs6mn5c2MUskGmaXIjPbTr4oZrie2t+ilSp
      uGrwlyo6Y5lFzsaivBub5kYqRk4rU6roG24oZfUSF+MzxIt5cnoZUQSLAhWhzGR+AZsiokgi
      oiAgCPB2dIE/Pz/UssEPcHYuzh+/W7WN6nC4OBLYuiGEIopEcxnmawx+AM0wuJFa5KWpURaL
      qxU0Li3Gdjz4AYZTScbTqZrnNYHhOvP+kXde5+qZC6ztkcmn4mz2VY+mUlSanNi4ifTlL3/5
      yy058hrmCzkuxre+7W+YJslSkd6lzab5Yo635yeZLWTJaCWyWpl4Kc9ULoUiimS0Us27qGYY
      G3YeaYZBTi/Tbq9a+FxeSPBn54fQt2A51CixQpH5XIHjbUEcisJisap3utGZ7bKCU1HJbXHv
      QDMMotkMbXYnVlkmr2mcmplqOPWaKBU54g8SK+ZWeXw5FQvTmeKGx88nFijpEqnJISauDVNM
      RPnB37yEP+ImNj3B2MWLuNr6UJX192TNMNjn9WKTm5+03DVx3GvJzcud15IsF5nNZ7BKMu/G
      pmt+uRXT4HoqhltV0fXVdwlZENns9x0r5sjpZYqaydcu3NiVwX+Tc3OLfH9kmi6/jCHo7PO4
      8VocxAp5CrqOADgUlZCtWsB2amZiW8cvGRXempvm2a5+RtPJpqSHs1qZ6WwGu6IiCFW3Go9q
      xac6OT+3seaQYZhohRymUUZSrGgVgf593RiShNUTJNLVxrrHwxImkC6V8Fub7x2wKwFQrOgk
      ijsTtIrmMmimvumdq6hXGHQHmS1kKFcquFUL/a4A78xP1v05qP5Sv3llkkx59zQpb/LPI1N8
      0tIOQnV3u9flXX7qreTl6bEdbRmkyiUmsimiDeoPrWQotYgk6fQ4fQx6qpt9s7n6U6vuow/T
      DWQTSZy+jTNUG9GqjbFdCYCcpm1rkbeSxWIenc0/fNmo4FQsnHT5uSlTZWAiiSL6JpPMywtJ
      Li+0xsFyM8oVg8tzOT5/bP+GRWs5rdyQGfdIKkG6XHtnOJdK4/C4t3W8igFPtPetMgdZmaao
      aGVMRAQqFIs6dqcDDJ18No/d4yKXSmFzuSlmM1idLgQBCukUit2FLIGmVaBSpqyD0+1cd/xm
      sisBYLDzR2/ZqNSV11hJQdcQlsRhAUSzutMcrWMkJwsir09svR6/FUykcghsXPuydjG7XZKl
      4pJ6XY1jz80RH7+B4G5HS0xQsQRxyUVyph2LkSGVFzjy8NFVP1Oq6OuaU1bu2CYnh8jgw6UU
      mRmbYN8jT2NkFoheu0pFcVAxylhkK8WKjivYRW9/iPnREfIVhZDXYCpqYpPSONv7lwOgVTvC
      u5IFsko7v/jttMHJosRcPsOZhSlOzYzy9vxk1YGxThrVqKjMZXdPjbgWmbLGmZmNg3A79km1
      MKldcaGXixTzBWIz0wydv4BgcWDkkizMTDN09hwVQcHlXL/3UquC1ybLy2nXQGc3siKiWiwE
      eg5gs4ioVguWcC+hiA+jXKKULdH74FHMUglEBUkEi2pw4c0LpGZnsNisLIxPUaG6F+Bp0T7A
      rjwBHLKCXVZ2VP3Y5fQwk0+v6rOthQBMZZMsllZPFRZLeUQELKJEaUXWQhElBj1BfjS60Eg5
      TtN4KzrPk92Rmk8BocEJgCgIKKJAZc08Oj45TtvAARw2hW5fmNkr79J2+ATkXAT2e/D7nWCu
      P3etUmtJEGh3OBhNpZi+fp2ZeJmyQyCriZQLWSxCmdTcItaeHgRRpePwIONvnqZjsJ/Z0SnS
      mTyejj6e/exniE/FyS9OYve5EalKwbj2+kbYlcQCV7dhIgFV9bMPdu1nvpDlUqJ+ClVaElTd
      iIDFzn5PkLxeRhElvBYbmAL/5dV3SRZbozq2HWRR4EtPP4TXuv6OO5vP8mp0exmgldhkGZdi
      ZaIBO6aVHA2EeCAUWff6WCrFd8fH172ulzUkVakZxhVdRxAlxDqSl4+1tfFAeOPK2kbYtY2w
      /W4/zi00aazkoDeIVZLpcXrpq+MeGLQ6kDfZLV4s5ZFFkS6nl4jdhUWSq7682xz8hdgko2+9
      vaNOrnrohrlhAV/AakNuoCkkZHPQ795+5qUWAtDrrt3F1e1yEbKt7zOWNxj8AJIs1x38Nlnm
      UGBjYbJG2bUAUCWJRyNdW57T97m8DHgC1UWtIHDYG+ahYCdBqwOrJGMRJbyqjaP+Ng57w5sO
      SBPIrCm0m8luP7NSWkxiCQYoxGaIjY8ye/4dUnOzTJ97h9hUlPkr75KITjN19jSlbQbXRtej
      iBI9rp2LAOxz++hwOPFZGs+jdzldeDaoyZJEkcc7Onbc5bcWAXi0rW1H2qlbZVf7Adyqlac7
      +jgXm2WuUPtup4giB70h9nv8q75IQRBos7uI2JzL1Z3SUnDktTKs8l7fgKXDZbUSi6Ucsfz2
      S5EFScHh81FYmMHf1c7I2DDJ+CKBAw9iZueoiFak2BjJeA5HJo9lK1qmS9S7nsP+IDP5zLLb
      zlbpdXmwyRJprcixYIhXpid3vOZRRYnjofqVmW0OByciEd6and3wPVvloN/PoK+1vsG7GgA3
      dzYfb+9hsZhnJpchXS5RMatVn0GrnU6nu67+oyAI66Y7VlnBKst1G+xFBNyqFc2oMJFdZCaf
      JraD5I+jowfRZsdmtSBbrfja2rGHO1DsDvA7KSxMI4YOExAmsLu2111Vb3DbZIWTkS5OzUxu
      uXrUJsuUjBKvzo4uv+a2yKRK288qiYLAE+2duDcx5AN4IBRCNwzenZ/fcbANer082cSnyUbc
      EQ0xzWAik+BynYWyfUWQiIJAm93N2ekMr0w0fqdqFvcFvfzbE/etes28qfFf0RGWSqjPLcyS
      3qTl0W+1YqBTWSMnaJom5Qpky1tvybRIEo+3deKTrUzOLRKNpVlIZEjlihTLOqZposgSLrsF
      v9tOR9BDZ9hLEp03otFt7eLKgsBDkQhHg8Fl8bBWcttbIptFt9NLXtcYz6xXmXMpFooVjdKK
      XoCpbBJzC0ug9OQNFmcWcIVDZBcSdDx8AkUUWLj4OpaO+0hOjtJ13yGiF95FDXQT7mlj5vy7
      mFY3UjlDMlWkfX8Hmm4nsIka201vr5sq2tVurRQFTV/uJhMEAYes4JSrJdx5/VYnV1Vwy8E+
      j4+p3CJzhfVBIggCFhkO+yJMZbLM5HMbBoKuV4hH0yQmUnx95DXGonHKWmVLgaPIEgGPgwP9
      ETydbjr6gygWecPpkyKK9LndHI9E8KjqrjTEw10UAIIgcNAbImJzEs2nKegaqigRslVl1q8k
      Vz8ddNOgtAV9SmdbF6WChl4sYpbnScwX8Nqz6LqJiBW7x42oWLHYVXRNA0HG5nKQKRh0HDkG
      wxO427uIj25eCetSFUzT5EZqkQux+XXFaya3Whmhur/yUKgDv9WKKAhYJHl5ynA9tdn5TN7f
      1Uu6XGI6l2WxWKCo6+i6wfWxOc5emODG9TkSiZ2VT2t6hdl4mtl4Gt4Bi1WhpzfIoYMdPHy0
      F4e9KgLsVFXCNhvtTmdLqj03464JAKgGgc9qx7fGjmkml6r5/qo0YP0aoOjpU5QEB8HuDjJz
      FmxWjWw8QXY+iiwFyU1crKpDZEqYaoZ8fJ5sKkNJE0lPj+Pu6iMxepXoxUncPd3UE0UOOaxL
      rYpbK83I6RpvzE7xSKSDXpdn1V1z0/unUP2+PBYrHosVTa/wT6cu8dXvvMXQ5PymVbTbpVTU
      GLo2w9C1GV794RU+8dRRfuZjjxHwOHbtbl+Lu2YNUA/NqPD67Bgl49YUSBUlPIqD/3tmbFs9
      w/n4PBZfqKZXmaGXKGSKOHzbT1kKwEcPdpDUtn/HFQWBD3T1EbTdCvzryfl1LaIreSTUg99q
      xzBMfnxumN/+ix8wMh3f9rkbwW5V+cLHTvK5Dz+C09Z84dutcNcEgGGazOXyTGeyxAtFclp1
      AagsmWvYVYmiUUCRBByKyn53kEQpz9fOjTN7m2uBABRJ4GSvZ51v7lbxWaw8192PJIrVZqJy
      gbOx6VVNKzeJ2Fw8EOhgNp7mt//iJb771tW6dkatZl9ngC9+7oM8eWzfrj8N9nwAFDSdc/Mx
      LizESJXKdYePKEDYbudEW5hBv5dSRePrV25wJlp7irSbhJ0KB8KNGUQ/2dGNz2Lh/GKUvL70
      XZi31g6SUN0J3+8O8OrZEb78h98mnto9Wcl6SJLICx86wS9/+v1Y1N2bme/ZADBMk0uxRV6Z
      nN6R0UPEYecDPZ2MZxd58WJ0VzvBanG03YHH1tgvvsflwapAvHRrUIuCwIlgD6IgYJVkTAP+
      4MUf8yf/8DqV2/yZa/HQwW7+6y9+go5dkr/fkwGgVSr88+gEV+KNucTIosCRkJfheI7LC80p
      FNsJfpvKkXZbzadXIZfFtkUvYZei4rKJlNaUT58I9uC12ChrOl/6w2/zj69ebMJVt46eNh+/
      /+s/xb7O4OZvbpDbrg26XUp6hRevDTc8+KFagHZuLkHEaUOVbt9XMejfuCNrIRolMTPJ1Og4
      l19/jVQqyZVTbzA3tz57Vazo+NTV0yhFlHAqKtlCiV/57Rfv+MEPMDGb4Au/9TUuDkdbfq49
      FQAVw+A7I+NMZprrcDicTBFxNr/heiuEHTae6++s+56F6QV8XpV0fI5rF67iCHZTTKy/AQiC
      wKAnRMTmqjprKhaO+TswKib/+f/8E6+eG27Vx2g6i+k8//53XmRkurXdensmAEzT5PTsAkOJ
      1vTuiqKB39aapouNkEWBzx+tiu5uVPMSaGuj88AgVqcXX0cPAwcGCHUGCHas1xKyy0rVQV6S
      qwtehxePYuO//fn3+N6bV1v9cZrO3GKGX/qf32A+kdn8zTtkz6wBUqUSf3r+StOVn1fiUlVi
      WY25XOvTopIg8Nn79/NIRwhBEPjexEjDvb+DXj/9Hg9nYlUlDFkQmbyQ4Ct/9v1mXPJt4+T9
      ffyvL34ai3IXuETulDejcy0d/ACZcpnn9rXT5myteZwoCPzk4T6ORnwUK9Visr4G6v2hupHW
      4/KgitKyL/D45CK/99cvN+GKby9vXBzjj/7utbodfztlTwRATtO4Gt94V7OZjKfS/PIj93M4
      2JwOqrVYJJEnen0UhCwvTQ/z0vQwP5geRhSrtT07pcPpImC1YZdVjge76bR6+auvn6ZQ3H2t
      o1bwR3/3Gmeubq7xtF32RACMJdMt1epcyUwuh4HBzz10iI8OdmNpYnaoy23jZJ8bp41VO7Sl
      is7V5AKKvLP2d5ss81Cofbl7zmuxcerUMJMzt0frqBXoFYOvfPX7aA3K1K9lTwTARLrOIsjU
      uPKjHzB25cbyS7NDl5i4fA29XELXdAxdQ9c0yoUChlGhlM9v+DjVDZNoJocsinxoXxdffOIB
      Hm4PItfpW92MNoeNzx0d4GSfF5u68VeumxUCNuu2/HBtssxTHT2rdHMm5xL80d+/vuPrvVO5
      MjbL179/pqnHvOOrQQ3TZKFQp3VRkPFFAqs06afOn6bnfR/nxuunMBQnIjnsVoWLb7zLofc9
      w7WXX+b4pz9PW6T2NGchX+Aw1bRixGHjXx8b4K1ZO+fnFlnIVljIFTctoHOrCvv8bh7tCHE4
      6GWhkOVMbPNpXNnUeV9HDxfj88TrLIoFoNPp4niofdXgN02TP/zWKbL57dsb7QX++B9e5yNP
      HsHnaqxs5CZ7IgDy9QwXjAqlQhlklVxyEYfXz77HP0A5G8diV6moTvyRLuwq9ORM7BaVngeO
      Uc9je61GaEYrkTNyDIQsvHCkn2RB4+xcjOFEmnS5TMUwUSWJiMPGwYCXTpeDiNOGVbql9rZV
      DzTDNDEx+EBXH3P5HJPZ9HKtviBUU50hm50elwe/1baueGxyLsG3X7+8pXPtRRYSWb71o/N8
      4eMnm3K8Oz4ATNOsX6cjyvQ+9Oiql/wd3dW/7B9Y9fr9T1VNFtoOHqp7zrUVlE7Zgk91MJrM
      8M3rI8xl88tijxZF4GZDfryU5525IvGim/sJ0Ot2LU9nipsIe62kWNGRRJEOp4v2GmUQ9Som
      /+p7p1d1vt2N/OV33+GzHzrRlKK5O38NIAg158SGViKzmKRSLhAdGq6W85oG88NDaJrGzLXL
      5PMlsvPTJBYSYFSIXr3E1I1RiqkYcxNR9EKa+cnouhqclb2oumHw7lyMNyYTjCwWmFkx+GtR
      rhhcW0zy4rVh/vLydSbSmWrP7Daczle+9+bCduWfjSiUNP7x1KUtn2evMhNPc+r8SFOOdccH
      gCQINVvlitkMiYVZ4sPX0AuLLMRyZOcm0AWZ6WtDWOw2pq9cZHp4AtWqgiDi7+qmlElSLumk
      F2aYvj5MMTFPobD67uxUqq2JqWKJb1y9wQ8npsjtwPdqJpfnG1dv8PLkNF5163sLAevO5ren
      zo2QSLfeMPxO4B9fvdiUrrU7PgBEQcBfo1vI7guiKBKCrFIq5DErBhXDwOb2galTyueRFIli
      OsXY+UuYgkAll8DbM0ilVCDYsw9RlrHZrRhrNtgCNisL+QJ/eeU6Uw3WHRmmydsz85yeiW9J
      3a3T4d6WIPBKvvfWlR393F7kjYujpJuwY3/HBwBAl2v9PDg1NUJ8YhLR4cUUbMjFWUx7mOT4
      dYI9veRSaTxtPbT1dxHo6SJ6bQhTceLzO8gnY8wOD+OLBMkWwW6/VQMkCgJ2ReZvrw831TBj
      LJVhNq3VFbp1KxYO+8I76orKF8ucbsFG0Z1KJl/i3NB0w8fZE7VAyWKJP71wue5i2DRNEDYa
      XibV/958YPmsFlRJYi7XmqnE/SEfPrtEolRYNg0RBYEuh4dDvtC21goruTw6y2f+0580vZn9
      TuZnPvoYv/7Ccw0d447PAgF4LCp9Hjc3Ehu3LtYf3FUHyK2gGwaJYuty6FdiST575CD3ByRy
      S/ImTsWCXVYa6oe9OBx9Tw1+gPM3opim2dD3tiemQIIg8HhHW8tscm6iiCK5HbRXboeKafLq
      ZBSHrBKxu4jYXTiUxoWgrk0035/3TmdyPkGh1Ng0dU8EAFR7eB+MbN1Pd7sIgNeiNmwjuhXG
      UummTrFM02R8ZnclTe4E4qkcmR0IHK9kzwSAIAg81dVBxN6aUuWjoQDaLjWJm9CUls6bVAyT
      +URzu+TqI/Dg/nbs4RCP7W/jJx4eJOxQePbkEQK21kmZr8UwTOYWG/vceyYAACyyxL84sB/v
      FhSKt8MBn5cHwkFSpfpzf7NS4fJL32b0ylBtt3RDJ1evcG8F46lM0542hmGQzOyutpFVlZFk
      mXw2jyBLqDYbogCDna0pI9+IRLoxWZc9FQAAbovKpw8PEHE0pxjqaCjAR/b3sVAobkGSygRR
      Ri8UmB26wcLQDa69+l1Grwxx5u9fJDYTI5OY5+1vfI3hq2N1j5Qslbat9b/hVZmQL+2mzZNJ
      SVR4ps9DwpDRdJNIxEc2FkdQdre3OtegvdWeyAKtxWOx8NOHBzk1FeXduYWNDMbrYpMlnunp
      5EgwgCgIJLeY+bE5HWBRycxMkM1UCHa5WIhGsTusLM7OYFM0DKuHUjYB9G14HM0wyJU1HE2w
      /zQx0fXd6Ze4ybuXRnh36e9TC7vTrFSLRvsD9mQAQFWz/tnebo4EA7wZnWUkmd5Sy6RDkTkS
      DHCiLYxDvTX4ilu4GwuSTP+JJ5f+daugrmfN+3qObeUTNM/9XEBAEgVa0TNks9lwqZAum0Tc
      Vqbmk1RMcDqsFPJFLFYrWrmEz+sikUijGdAW8pFLZ8iUK3jsKmVTxCYaLGabn15u1ENgzwbA
      TSIOOx8f6CdT1hhLpZla0gbN6zoV45Y2aMhuo8fjotvlXPazvVsQBLCoMuUmd0sBnDjcjSiY
      mOUyI7PVDjNRUvjIU8f44SunOfnYUSZmorgEkZLfyttDcVx2C/d3uhlOGhwNycQ1CVU0eeXM
      MM2+QqulsSfoXTESBEHAbVE5Fg5yLBzENFdLzN40lqhHraColHJcffs0A8ePce3Umzjae9h/
      /wEmzp4mldOxSzo5XcVl1SmLTgaPP0D04jukYhmCA/uZOfc2ngPHKcyO4Ow6Ss/+1QYZ1iaZ
      v4mCgNthJdOCJphyBQJ2ibHFMg8e7KGYu0TPgf1YJZHHHz2CVwWlzc07Z8YJt3tBMFAUhbwm
      cPJgBAs6CxMx4ojI0PQA8DYoYHBXBMBahA1LIjbGV8OfV7I4CHW1IyAgKhKCIIIg4fS4yRt5
      LA4PKiVks0w2lscwTZw+P+npMQzn0wQHsrQP9DKemkK1rP6qFVFcNQVrBFESCXqcTC80X+R3
      IZlF0kRy5QrJVIpIW5hL568yPOZGy2VAtaMKFe4b6GIyGudgdwC/QyUei/PapXE6gy4UuwO/
      XKIV++thn6uhn78rA2AnRBz2dT6TeiHNzNXrlDRQFBVZVVgYGyGTSCLJTsRKirxmxeKQkRSF
      xYkJLFYJ09tLyFkmrUUop+KUNRHnmoj0Wi1Nc0QREOgMezl3o/HisLWMjEe5WXk/Ps3yWqOU
      XNJS1XLkgdfO3lh6yppcm7il5jYdSwNpxpp+ZeCyW/A2qOh3LwCW8FkteK2WVXVAss3NA89/
      tPqPwUFMU0MrCYT69q37+fAglAsFVJsNT3sfAP5INVV76Mn1rup9Hlfz/HQFGOwJwWtNOVxd
      6ilK73ZdZUfIg8Pe2J7QntsHaBWyKHLIX9+TVhAUVOvG9wy1hkt6LUTgcMC/ncvblCP97U09
      3l7gUG9bw1mgewGwggcjIdRdsObs9biX/Mmax4GeMK4G74Z7jROHuxs+xr0AWIFTVXikY/10
      pZlIgsBT3R1NtwLyu+0c6qtvw3o3oSoSDx9auwOzfe4FwBpOtIVpdzanzKIWJzvamn73h2rm
      69mHB5t+3DuVgz0RusKN1x3dC4A1qJLEx/b341abL5V+yO/jsY5Iy4zgfuKxQyj1BI/uIj7y
      xH1N+R7vBUANvFYL//Lg/qYGwaDPw/P7ehpetNUj4nfz5LH1Gaq7Dasq8/zj9zXlWPcCYAOC
      Niv/6r4D9Li35s+1EaIg8Fh7hI8N9KM0aee3Hi88f6LlnXO3mw8/cYSAx9GUY90LgA24WV7x
      qYMDPNfbhXMHVZsdTgefPjTAU90dyLuQXQJ4+FAPDxzo2pVz3Q4sisznnn+kadPIPaEKcSdQ
      1HWuxRNcii0ym8tvKI5rlST6PG6OhgN0u5wtnfJsxKtnh/nF//H122p+3So++fRRfuvnP3Yv
      AG4nRV0nViiSKpUoVwwEwKbI+CwWAjYbUgNS6s3ANE1+4/e+yXf3oC9YPTxOK9/8ys8R8jU2
      LV3JvVKIHWCVZbpczpqCXXcCgiDwa599llPnR8gVdrNTrLX8wk8+1dTBD/fWAHctHUEPv/qZ
      Z7esh3Snc/L+Pj717PGmH/deANylCILAp559kI88ceR2X0rDhH0ufvPnPor6XnaJvMf2kSSR
      //gzH2J/V/B2X8qOUWSJ3/z5j9IebMxFcyPuBcBdjtth5X9/8dN0hlozgFqJLIl86Wc/zBNH
      +1t2jnsB8B6gM+Tld3/1U03bPNoNBAF+5TPv5xNPHW1Z6QjcS4O+p7gxtcC/++9fb0nrZDNR
      ZIn/8PkP8tMffKilgx/uBcB7jumFJL/2u3/L5dHZ230pNXHaLHzp33yYDz12uOWDH+4FwHuS
      bL7EV776Pb718vnbfSmr2NcZ5L/94ic41Nu2a+nbewHwHsU0Tf7h1Yv8zl+8RCzVmL5moyiS
      yCefOcavv/Aczhp2WK3kXgC8x1lIZPj9b7zC379ygcoWlPWazX39bfzGC89x4nDPrkx51nIv
      AO6BYZpcGp7hD178Ma9fHEVvhcbiGnoiPn72k0/wkSePYGnBBtdWuRcA91jGNE2ujM3yNz84
      y/ffvkqiyZLrqizx0KFuPvXsg7z/4QO3deDf5F4A3GMdpmmSzhV589IYPzw9xOsXRonvcJ1g
      UWQeONDJM8cHef9DA3SFfYi3uVp2Jf8fECu82VaxnJMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TotalCases_Countries_Treemaps' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
